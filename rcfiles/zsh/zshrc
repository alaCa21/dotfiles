# Path to your oh-my-zsh installation.
export ZSH="${HOME}/.dotfiles/oh-my-zsh"

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
 ZSH_THEME="bira"

setopt PROMPT_BANG # enables '!' substituition on prompt

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git fasd extract history-substring-search systemd.plugin.zsh)
#eval "$(fasd --init posix-alias zsh-hook )"
eval "$(fasd --init zsh-hook zsh-ccomp zsh-ccomp-install zsh-wcomp zsh-wcomp-install)"

source $HOME/.dotfiles/rcfiles/zsh/functions/wrapper_functions.lib

if [ -f ~/.dotfiles/oh-my-zsh/custom/auto-fu/auto-fu.plugin.zsh ]; then
    source ~/.dotfiles/oh-my-zsh/custom/auto-fu/auto-fu.plugin.zsh ;
    function zle-line-init () {
    auto-fu-init
}
zle -N zle-line-init
fi

# testing completions
# https://github.com/zsh-users/zsh-completions
plugins+=(zsh-completions)
autoload -U compinit && compinit
autoload -Uz url-quote-magic; zle -N self-insert url-quote-magic

autoload -U zmv
alias mmv='noglob zmv -W'

# User configuration
export HISTIGNORE="&:ls:[bf]g:exit:reset:clear:cd:cd ..:cd.."
setopt HIST_IGNORE_DUPS

export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl"
# export MANPATH="/usr/local/man:$MANPATH"
#
cdpath=(. .. ~/Desktop ~/bin ~/docs ~/docs/img ~/tmp)
typeset -U path cdpath fpath manpath
path=(~/bin $path[@])

fpath=( ${HOME}/.dotfiles/rcfiles/zsh/functions "${fpath[@]}" )

source $ZSH/oh-my-zsh.sh

# If you end up using a directory as argument,
# this will remove the trailing slash (usefull in ln)
zstyle ':completion:*' squeeze-slashes true

# cd will never select the parent directory (e.g.: cd ../<TAB>):
zstyle ’:completion:*:cd:*’ ignore-parents parent pwd

# HISTORY
HISTSIZE=10000
SAVEHIST=9000
HISTFILE=~/.zsh_history

# Use caching so that commands like apt and dpkg complete are useable
#zstyle ':completion::complete:*' use-cache 1
#zstyle ':completion::complete:*' cache-path $ZSH_CACHE_DIR

#ZSH_CACHE_DIR=${HOME}/.zsh.d/cache
#mkdir -p ${ZSH_CACHE_DIR}

# Ignore completion functions for commands you don’t have:
zstyle ':completion:*:functions' ignored-patterns '_*'

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

source ~/.dotfiles/rcfiles/zsh/aliases
source ~/.dotfiles/rcfiles/zsh/functions/simplefunctions

# alt-s inserts "sudo" at the start of line:
insert_sudo () { zle beginning-of-line; zle -U "sudo " }
zle -N insert-sudo insert_sudo
bindkey "^[s" insert-sudo

bindkey "^R" history-incremental-pattern-search-backward
bindkey "^S" history-incremental-pattern-search-forward


# source: http://goo.gl/HUXBjG
globalias() {
    if [[ $LBUFFER =~ ' [A-Z0-9]+$' ]]; then
        zle _expand_alias
        zle expand-word
    fi
    zle self-insert
}

zle -N globalias

bindkey " " globalias
bindkey "^ " magic-space           # control-space to bypass completion
bindkey -M isearch " " magic-space # normal space during searches
bindkey -s '\eu' 'cd ..^j' # alt-u up dir

# source: http://stackoverflow.com/questions/171563/whats-in-your-zshrc
# I often build elaborate commands step by step: I run a command,
# see I need a different option, then use the output of the same
# command within # $() (the portable version of backquotes) in a
# for loop or something. The following snippet makes alt-E (I
# should probably write meta-E?) insert the previous line
# between $().

insert-history-line() {
    LBUFFER="$LBUFFER\$(${history[$((HISTNO-1))]})"
}
zle -N insert-history-line insert-history-line
bindkey '^[e' insert-history-line

# firefox improviments
# disalbe rendering fonts in firefox to free memory
export MOZ_DISABLE_PANGO='1'
