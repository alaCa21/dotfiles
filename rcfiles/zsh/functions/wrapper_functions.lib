#!/usr/bin/env zsh
# vim: ft=sh
# Arquivo: wrapper for ping and host
# Criado: ter 27/dez/2016 hs 07:12
# Last Change: sex 30 dez 2016 09:01:41 BRT
# autor: Sérgio Luiz Araújo Silva
# site: http://vivaotux.blogspot.com
# twitter: @voyeg3r
# email: <voyeg3r  gmail.com>
# source: https://www.cyberciti.biz/tips/unix-linux-bash-shell-script-wrapper-examples.html

_getdomainnameonly(){
    # Name: _getdomainnameonly
    # Arg: Url/domain/ip
    # Returns: Only domain name
    # Purpose: Get domain name and remove protocol part, username:password and other parts from url
    # get url
    local h="$1"
    # upper to lowercase
    local f="${h:l}"
    # remove protocol part of hostname
    f="${f#http://}"
    f="${f#https://}"
    f="${f#ftp://}"
    f="${f#scp://}"
    f="${f#scp://}"
    f="${f#sftp://}"
    # Remove username and/or username:password part of hostname
    f="${f#*:*@}"
    f="${f#*@}"
    # remove all /foo/xyz.html*
    f=${f%%/*}
    # show domain name only
    echo "$f"
}

ping(){
    # Name: ping() wrapper
    # Arg: url/domain/ip
    # Purpose: Send ping request to domain by removing urls, protocol, username:pass using system /usr/bin/ping
    local array=( $@ )  		# get all args in an array
    local host=${array[-1]}     # get the last arg
    local args=${array[1,-2]}   # get all args before last arg in $@
    #local _ping="/usr/bin/ping"
    local _ping="/bin/ping"
    local c=$(_getdomainnameonly "$host")
    [ "$host" != "$c" ] && echo "Sending ICMP ECHO_REQUEST to \"$c\"..."
    # pass args and host
    # $_ping $args $c
    # default args for ping
    $_ping -n -c 2 -i 1 -W1 $c
}

host(){
    # Name: host() wrapper
    # Arg: Domain/Url/IP
    # Purpose: Dns lookups system /usr/bin/host
    local t="$1"
    local _host="/usr/bin/host"
    local c=$(_getdomainnameonly "$t")
    [ "$t" != "$c" ] && echo "Performing DNS lookups for \"$c\"..."
    $_host $c
}
# END PING WRAPPER ------------------------------------------------


# subslider(){
#     # subslider wrapper
#     # how to deal with arrays in zsh: http://zshwiki.org/home/scripting/array
#
#     local _subslider="${HOME}/bin/subslider"
#
#     #usage(){
#     #    echo você deve fornecer dois parametros
#     #    echo arquivo a ser alterado e o tempo de alteração
#     #    echo parametros: file.srt +-3,000
#     #    sleep 5
#     #    exit 1
#     #}
#
#     #[[ ${#} < 2 ]] && usage
#
#     local -a FNAME
#
#     # -2 pega o nome arquivo da legenda a ser modiicado
#     FNAME=(${@[-2]})
#
#     # pega a codificação do arquivo
#     FILE_ENCODING=$(file -bi $FNAME | awk -F'=' '{print $2}')
#
#     # se a codificação não for utf-8 aplica
#     [[ "$CODIFICATION" != "utf-8" ]]  && iconv -f $CODIFICATION  -t UTF-8 "${FNAME}" > $OUTFILE
#
#     mv -f $OUTFILE $FNAME
#
#     $_subslider $@
#
#     [[ -f "${FNAME:r}_offset.srt"  ]] && sed -i 's/\x0D$//' "${FNAME:r}_offset.srt"
#     mv "${FNAME}" ~/.local/share/Trash/files/"${FNAME:r}-$(date +%H-%M-%S).srt" && mv "${FNAME:r}_offset.srt" "${FNAME}"
# }

