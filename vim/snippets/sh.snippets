# Shebang. Executing bash via /usr/bin/env makes scripts more portable.
snippet #!
	#!/usr/bin/env bash
	# Last Change:
	# Author: Sérgio Luiz Araújo Silva
	# Twitter: @voyeg3r

snippet sh
	#!/usr/bin/env bash

snippet ir "if user is root" w
	# testa se está logado como root
	if [ "$(id -u)" != "0" ]; then
	echo "  Need be root"
		sleep 2
		exit  1
	fi

		${0}

snippet if
	if [[ ${1:condition} ]]; then
		${0:#statements}
	fi
snippet elif
	elif [[ ${1:condition} ]]; then
		${0:#statements}
snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${0:#statements}
	done
snippet fori
	for ${1:needle} in ${2:haystack} ; do
		${0:#statements}
	done
snippet wh
	while [[ ${1:condition} ]]; do
		${0:#statements}
	done
snippet until
	until [[ ${1:condition} ]]; do
		${0:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
		${0};;
	esac
snippet go
	while getopts '${1:o}' ${2:opts}
	do
		case $$2 in
			${3:o0})
			${0:#staments};;
		esac
	done
# Set SCRIPT_DIR variable to directory script is located.
snippet sdir
	SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
# getopt
snippet getopt
	__ScriptVersion="${1:version}"

	#===  FUNCTION  ================================================================
	#         NAME:  usage
	#  DESCRIPTION:  Display usage information.
	#===============================================================================
	function usage ()
	{
			cat <<- EOT

	  Usage :  $${0:0} [options] [--]

	  Options:
	  -h|help       Display this message
	  -v|version    Display script version

			EOT
	}    # ----------  end of function usage  ----------

	#-----------------------------------------------------------------------
	#  Handle command line arguments
	#-----------------------------------------------------------------------

	while getopts ":hv" opt
	do
	  case $opt in

		h|help     )  usage; exit 0   ;;

		v|version  )  echo "$${0:0} -- Version $__ScriptVersion"; exit 0   ;;

		\? )  echo -e "\n  Option does not exist : $OPTARG\n"
			  usage; exit 1   ;;

	  esac    # --- end of case ---
	done
	shift $(($OPTIND-1))
snippet root
	if [ \$(id -u) -ne 0 ]; then exec sudo \$0; fi
snippet fun
	${1:function_name}() {
		${0:#function_body}
	}
snippet ffun
	function ${1:function_name}() {
		${0:#function_body}
	}


snippet response "get yes or no from user" w
	read -p "Type one response [y|n]:" response
	if [[ "${response,,}" =~ ^[^y] ]];then
		exit 0
	fi
	${0:# press c-j}

snippet ifile "if file exists" w
	if [ ! -e ${1:filename}  ]; then
		echo "  file $1 do not exists"
	fi

	${0}

snippet isempty "if file is empty" w
	[ -f "${1:filename}" -a ! -s "$1" ] && echo "$1 is empty'!'"
	${0:# press c-j to exit snippet}


snippet ifdir "test if dir exists" w
	[ -d ${1:namedir} ] || mkdir $1 ; cd $1
	${0:# press c-j}

snippet "ifprog(ram)?" "test if program is installed" r
	command -v ${1:prog} >/dev/null || sudo apt-get install $1
	${0:# press c-j}

snippet lock
	LOCK_FILE=/tmp/.lock
	(set -C; :  > $LOCK_FILE) 2> /dev/null
	if [  $? != "0" ];  then
		echo "Lock File exists - exiting"
		sleep 1
		exit 1
	fi
	${0:# press c-j}
