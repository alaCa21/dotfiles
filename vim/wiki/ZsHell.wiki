Arquivo: zshell tips and tricks
Criado: Sáb 04/Jan/2014 hs 07:23
Last Change: Ter Jul 22, 2014  11:49
autor: Sérgio Luiz Araújo Silva
site: http://vivaotux.blogspot.com
twitter: http://www.twitter.com/voyeg3r
email: <voyeg3r at gmail.com>

References: http://chneukirchen.org/dotfiles/.zshrc

==how upgrade oh-my-zsh==


    Open up Terminal

    Type in '~/.oh-my-zsh', this should change your directory to the zsh directory.
    -Terminal should read: " .oh-my-zsh git:(master) ". If it does, go to step 3.

    Type in "git status" to see that your status is ahead of master.
    -If you're not concerned about the file status changes, you can "stash" those changes by doing step 4.

    Type in "git stash" to save the progress in the git and move the head back to master.
    Done. Now you should be able to upgrade the next time the terminal asks you too.

    now type

				upgrade_oh_my_zsh

		now type

				git stash pop

=fasd tool shortcuts==

  fasd is a tools installed in zsh environment

  f foo           # list frecent files matching foo
  a foo bar       # list frecent files and directories matching foo and bar
  f js$           # list frecent files that ends in js
  f -e vim foo    # run vim on the most frecent file matching foo
  mplayer `f bar` # run mplayer on the most frecent file matching bar
  z foo           # cd into the most frecent directory matching foo
  open `sf pdf`   # interactively select a file matching pdf and launch `open`

	# aliases para fasd
	alias a='fasd -a'        # any
	alias s='fasd -si'       # show / search / select
	alias d='fasd -d'        # directory
	alias f='fasd -f'        # file
	alias sd='fasd -sid'     # interactive directory selection
	alias sf='fasd -sif'     # interactive file selection
	alias z='fasd_cd -d'     # cd, same functionality as j in autojump
	alias zz='fasd_cd -d -i' # cd with interactive selection
	alias v='f -e vim'       # open file with vim
	alias o='a -e xdg-open'  # quick opening files with xdg-open#

= changing the shell =

	sudo chsh -s $(which zsh) $(whoami)

= one-liners =

# lowcase filenames - source: http://lorenzod8n.wordpress.com/category/zsh/

		for file in *; do mv $file ${file:l}; done
		for p in ~/pictures/**/*[A-Z]*; do mv $p ${p:l}; done

An application of modifiers is !:t, which results into the basename of the last argument. Very useful when working with URLs, for example. You’ll never have to strip the path manually again:

% wget ftp://ruby-lang.org/pub/ruby/1.8/ruby-1.8.7-p330.tar.gz
% tar xzvf !:t

=use r to repeat the last command - with substituition =

  echo one two
  r two=three
  one three

= print var in lowcase =

		echo $var:l

=how set up 'command not found'=

[ -r /etc/profile.d/cnf.sh ] && . /etc/profile.d/cnf.sh

== some funtions ==

shell () {
  ps | grep `echo $$` | awk '{ print $4 }'
}

# show only directories
print -l foldero/**/*(/)

# show only regular files
print -l foldero/**/*(.)

changed in last three days
		ls -l */**(.m3)

# show empty files
ls -l foldero/**/*(L0)

# show files greater than 3 KB
ls -l foldero/**/*(Lk+3)

# show files modified in the last hour
print -l foldero/**/*(mh-1)

# sort files from most to least recently modified and show the last 3
ls -l foldero/**/*(om[1,3])

   list the most recent file
		ls -l */**(.om[1])

    # vi newest file
		vi *(.om[1])

show all files with extension .pdf in current directory and all subdirectory

ls **/*.pdf

make all files executable (recursively)

		chmod -x **/*(.)

show all regular files with the word “test” in their name in current directory and all subdirectory


		ls **/*test*(.)

find all executable files in current directory and all subdirectory


				ls -l **/*(.x)

find all files of user tomcat

		ls -l **/*(u:tomcat:)

find all files you accessed within the last month:


		ls **/*(.aM-1)

find all files with size larger than 10 megabytes

		ls **/*(.Lm+10)


show only executable files

   ls -l **/*(*)

tornar executáveis todos os arquivos de um diretório


    o ponto "." é um qualificador que indica arquio

		chmod -x **/*(.)

# zmv "programmable rename"
autoload -U zmv

# rename txt to html
zmv '(*).txt' '$1.html'

zmv -W '*.txt' '*.html'

#Replace spaces in filenames with underline
zmv '* *' '$f:gs/ /_'

zmv '(* *)' '${1// /}'
zmv -Q "(**/)(* *)(D)" "\$1\${2// /_}"
# Change the suffix from *.sh to *.pl
zmv -W '*.sh' '*.pl'
# lowercase/uppercase all files/directories
$ zmv '(*)' '${(L)1}' # lowercase
$ zmv '(*)' '${(U)1}' # uppercase

}}}
